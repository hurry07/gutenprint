Type of program:
----------------

 Epson Stylus Color/Photo color printer driver for
 Ghostscript version 5.x/6.x offering CMYK 4 color and  CMYKcm 6 color HQ prints.


Author:
-------

 This Ghostscript frontend is written by
 Henryk Richter (buggs@comlab.uni-rostock.de).

 Used Escp2 driver for Epson printers by Michael Sweet (mike@easysw.com) and
 Robert Krawitz (rlk@alum.mit.edu).

 Currently maintained by the Gimp-Print development team
 (http://gimp-print.sourceforge.net).


License:
--------

  This program is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License as published by the Free
  Software Foundation; either version 2 of the License, or (at your option)
  any later version.
 
  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


Installation and Compilation:
-----------------------------

 - If you downloaded a CVS snapshot of this software, this directory
   will not include gdevstp-escp2c, gdevstp-print.h, gdevstp-util.c,
   or gdevstp-dither.c.  To create these files, you must run the
   following commands from the parent directory:

   aclocal
   autoconf
   automake
   ./configure
   make ghost

   If this fails (because you do not have the Gimp or any of the
   autoconfigure tools installed on your system), please download the
   latest release snapshot from gimp-print.sourceforge.net.
 - Get a recent Ghostscript (5.10 or better) and prepare the sources as
   described in the documentation (don`t forget zlib, libpng and libjpeg
   when downloading the source) for compiling
 - copy all "*.c" and "*.h" files to the "src/" subdirectory of ghostscript`s
   distribution.
 - edit the file "contrib.mak" in the "src/" subdirectory by adding
   the contents of "contrib.mak.addon"
 - add "$(DD)stp.dev" to the line "DEVICE_DEVS6=..." in "unix-gcc.mak"

 Compile and install gs as described in the documentation, after a
 successful compiler run you got a new driver named "stp". Check 
 this by calling "gs -h" with the newly compiled ghostscript.

Debian users can try the following (contributed by Stuart Miles):

Download the debianised sources for gs-aladdin and libjpeg:

# apt-get source gs-aladdin libjpeg

(Make sure you have a deb-src entry in /etc/apt/sources.list first!
See the sources.list(5) man page for more info on setting up apt.)

This will download the .dsc, orig.tar.gz and diff.gz files, unpack and
patch the files for you.

Rename the libjpegxxx directory to libjpeg.

Under the gs contrib directory make an stp subdir and copy in the
gdevstp* files, copy in the README file and rename it README.stp, in
the same directory you'll also need a contrib.mak.diff file. I'll have
to send that to you seperately, I'm at work at the moment and don't
have the files with me.

Under the gs/debian directory is a file called rules, this file is a
script which controls the compilation of gs and the building of the
debian package, this needs to be amended to add the actions required
to build the stp driver. Again, I'll have to send you a copy of the
file tonight, I'll also include a .diff against the original.

Once all the files are in place go into the gs directory and:

# debian/rules binary

The script will copy the sourcefiles and README.stp into the main gs
directory, patch contrib.mak, add the stp entry to unix-gcc.mak,
compile gs, package it all up as a .deb package
(gs-aladdin_5.50-8.deb) and put the resulting file in the directory
above gs.

To install it:

# dpkg -i gs-aladdin_5.50-8.deb

NB.
#include <standard disclaimers>

This is not an official Debian package.  This method works for at
least one person.  To be really neat and tidy other files need
modifying to ensure that this custom package gets marked as such and
_not_ an official package.



Options:
--------

 Options for the stp driver are given in normal ghostscript
 manner. The resolution of the image calculated by ghostscript is not
 bound to the resolution of the printer output. It is for example
 possible to specify "-r360" to gs and print the output in 1440x720
 dpi (see below for driver parameter). The result is a somewhat faster
 operation of the driver.


Color Balancing Values: (min,max,default)
----- --------- ------- -----------------

-dRed=xxx        xxx:   0 ... 200  (100)
-dGreen=xxx      xxx:   0 ... 200  (100)
-dBlue=xxx       xxx:   0 ... 200  (100)
-dBrightness=xxx xxx:   0 ... 400  (100)
-dContrast=xxx   xxx:  25 ... 400  (100)
-dGamma=xxx      xxx: 0.1 ... 3.0  (1.0)
-dDensity=xxx    xxx: 0.1 ... 2.0  (1.0)
-dSaturation=xxx xxx: 0.0 ... 9.0  (1.0)
-dColor=x          x:   0 ...   1  (1) (0==gray, 1==color) 


Printer Model Selection:
------- ----- ----------

-dModel=xx

0   Stylus Color
1   Stylus Color Pro/Pro XL/400/500
2   Stylus Color 1500
3   Stylus Color 600
4   Stylus Color 800
5   Stylus Color 850
6   Stylus Color 1520
7   Stylus Photo 700
8   Stylus Photo EX
9   Stylus Photo
10  Stylus Color 440/460
11  Stylus Color 640
12  Stylus Color 740
13  Stylus Color 900
14  Stylus Photo 750
15  Stylus Photo 1200
16  Stylus Color 860
17  Stylus Color 1160
18  Stylus Color 660/670
19  Stylus Color 760
20  Stylus Photo 720
21  Stylus Color 480
22  Stylus Photo 870
23  Stylus Photo 1270
24  Stylus Color 3000

Most or all of these printers are fully functional.


Print Resolution Selection:
----- ---------- ----------

-dQuality=x

0  360 DPI                               (works on all printers)
1  720 DPI Microweave                    (works on all printers)
2  720 DPI Softweave                     (works on all printers except
					  for Stylus Color, Stylus
					  Color 1500, Stylus Color
					  1520, and Stylus Color 3000)
3  720 DPI High Quality                  (works on all printers except
					  above and Epson Stylus Color
					  440/460/480)
4  720 DPI Highest Quality               (works on all printers except
					  above and Epson Stylus Color
					  440/460/480)
5  1440 x 720 DPI Microweave             (works on all 1440x720 dpi printers)
6  1440 x 720 DPI Softweave              (works on all 1440x720 dpi
					  printers except for Stylus
					  Color 1520 and Stylus Color 3000)
7  1440 x 720 DPI Highest Quality        (works on all 1440x720 dpi
					  printers except for Stylus
					  Color 1520 and Stylus Color 3000)
8  Emulated 1440 x 1440 DPI              (works on all 1440x720 dpi
					  printers except for Stylus
					  Color 1520 and Stylus Color 3000)
9  Emulated 1440 x 2880 DPI              (works on all 1440x720 dpi
					  printers except for Stylus
					  Color 1520 and Stylus Color 3000)

Modes 8 and 9 use oversampling to emulate higher resolutions than the
printers support.  In some cases they may yield improved output
quality, but they are slower than the lower resolution modes.  Modes
1, 2, 3, and 4 all dither the same way, but use the printer
differently to obtain different tradeoffs between printing time and
banding reduction.  Likewise with modes 5, 6, and 7.

Modes 1 and 5 are extremely slow on many printers.  Not all printers
can do Microweave properly, particularly at 1440x720 DPI.  If
Microweave is used with these printers, the printing will be done one
row at a time.  In addition to being extremely slow (but often
extremely high quality), this may be harmful to the print head and may
cause clogging, due to ink pooling in the print head.  If your printer
is capable of non-Microweave modes, there is seldom any advantage to
be had from using Microweave.

Dithering Algorithms:
--------- -----------

-dDither=x

0  Hybrid Floyd-Steinberg
1  Ordered
2  Random Floyd-Steinberg
3  Adaptive Hybrid Floyd-Steinberg
4  Adaptive Random Floyd-Steinberg

Hybrid algorithms use error diffusion, but a matrix is used when a
random number is required.  Adaptive algorithms use error diffusion
except in very light regions, where ordered dithering is used.

Ordered dithering typically works best in solid-color graphics on four
color printers, and in very pale regions.  The results on six color
printers tend to be poor.  The adaptive algorithms do perform well on
six color printers.


Currently supported Media Selection:
--------- --------- ----- ----------

(important: always use lower case names)

-sPAPERSIZE=letter
-sPAPERSIZE=legal
-sPAPERSIZE=a4
-sPAPERSIZE=a3


Image type (to optimize the dither):
----- ---- --- -------- --- --------

-dImageType=x x:   0 ...   3  (0)
Select the image type most representative of what's being printed.  

0  Line art (color or gray scale)
1  Primarily solid colors or smooth gradients (color or gray scale)
2  Continuous-tone photographs (color or gray scale)
3  Pure black and white or pre-screened (currently black only)

For mixed documents, options 0 or 1 will probably work best.  Option 0
will dither faster and yield sharper text, but images will be
grainier.  Option 1 will yield smoother images, but text will not be
as sharp and the dither process will be slower.  Option 2 will yield
the best natural images, but text may be noticeably fuzzy.  Option 3
is very fast and accurate, but should not be used if there are any
tones other than pure black and white.


Examples:
---------

Example 1 (print charts to file, color, 360 dpi):
gs -sDEVICE=stp -dModel=8 -dDensity=0.7 -dGamma=1.5 -dSaturation=0.9 -dBrightness=40 -dImageType=1 -sOutputFile=itsyourchoice.prn foo.ps

Example 2 (print color photograph to /dev/lp0 at maximum quality):
gs -q -dSAFER -dNOPAUSE -sDEVICE=stp -dModel=6 -dDensity=0.8 -r1440 -dQuality=6 -dImageType=2 -sOutputFile=/dev/lp0 foo.ps

Example 3 (print pure black text to stdout)
gs -q -dSAFER -dNOPAUSE -sDEVICE=stp -dModel=6 -dDensity=0.8 -r720 -dQuality=2 -dImageType=3 -sOutputFile=- foo.ps


PDQ and CUPS
------------

The PDQ driver declaration in file gs-stp.pdq can be used with PDQ
(http://feynman.tam.uiuc.edu/pdq/) to give a nice control panel for
this driver.  To use it, put the file somewhere, and add a try_include
"filename" clause to your ~/.printrc file.  Then run xpdq and select
Printer->Add Printer.

The PPD file com-stp.ppd can be used with CUPS.

For more information, see the Printing HOWTO
http://www.picante.com/~gtaylor/pht/

A new, experimental printer configuration method may be found at the
following locations, depending upon the printing method that you
currently use:

LPD: http://www.picante.com/~gtaylor/pht/lpd-doc.html
PDQ: http://www.picante.com/~gtaylor/pht/pdq-doc.html
CUPS: http://www.picante.com/~gtaylor/pht/cups-doc.html


Bugs and Limitations:
---------------------

- This driver is relatively slow, and memory-hungry with large paper
  sizes and high quality settings.  As of release 3.1.7, it should be
  considerably faster on sparse files, which is typical of
  primarily-text output.
- In some cases (the Epson Stylus Color 850 is a known example), the
  top margin on the paper will be somewhat wider than desired
  (typically by about 1 cm or 3/8").  This is more likely to happen
  with older printers.
- 360 dpi output tends to be pale and somewhat rough.  Increasing the
  density to 1.6 or thereabouts may help to some degree.
