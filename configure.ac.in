dnl $Id: configure.ac.in,v 1.4 2002/03/16 16:08:16 rlk Exp $
dnl Copyright (C) 2001 Roger Leigh
dnl 
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2, or (at your option)
dnl any later version.
dnl 
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

dnl Process this file with autoconf to produce a configure script.

dnl MAKING RELEASES (a step-by-step guide!)
dnl ===============
dnl
dnl Since the last release:
dnl 1. if only source code (not the interface) has changed, set
dnl      GIMPPRINT_MICRO_VERSION += 1;
dnl      GIMPPRINT_INTERFACE_AGE += 1;
dnl 2. if any functions have been added, removed, or changed, set
dnl      GIMPPRINT_INTERFACE_AGE = 0;
dnl      GIMPPRINT_CURRENT_INTERFACE += 1;
dnl 3. if interfaces have been added, set
dnl      GIMPPRINT_BINARY_AGE += 1;
dnl 4. if interfaces have been removed, set
dnl      GIMPPRINT_BINARY_AGE = 0;
dnl
dnl For more detailed information, see the libtool info documentation.
dnl
pushdef([GIMPPRINT_NAME],              [gimp-print])
pushdef([GIMPPRINT_MAJOR_VERSION],     [4])
pushdef([GIMPPRINT_MINOR_VERSION],     [3])
pushdef([GIMPPRINT_MICRO_VERSION],     [0])
pushdef([GIMPPRINT_EXTRA_VERSION],     [])
pushdef([GIMPPRINT_CURRENT_INTERFACE], [1])
pushdef([GIMPPRINT_INTERFACE_AGE],     [0])
pushdef([GIMPPRINT_BINARY_AGE],        [0])
pushdef([GIMPPRINT_VERSION], GIMPPRINT_MAJOR_VERSION.GIMPPRINT_MINOR_VERSION.GIMPPRINT_MICRO_VERSION[]GIMPPRINT_EXTRA_VERSION)

AC_INIT(GIMPPRINT_NAME, GIMPPRINT_VERSION, [gimp-print-devel@lists.sourceforge.net])
AC_PREREQ(2.50)
AC_REVISION($Revision: 1.4 $)
AC_CONFIG_SRCDIR(src/main/print-dither.c)
AC_CONFIG_AUX_DIR(scripts)
AC_COPYRIGHT(
[
Parts of this configure script come from the `configure.ac.in' file, and
are not based on freely-redistributable m4 macros; you can redistribute
them and/or modify them under the terms of the GNU General Public
as published by the Free Software Foundation; either version 2, or (at
your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
])

dnl In the following, there are a the following variants
dnl of gimpprint cflags and libs variables
dnl
dnl GIMPPRINT_CFLAGS:  cflags for compiling libraries and example progs
dnl GIMPPRINT_LIBS:    libraries for linking programs. ONLY to be used
dnl                    to generate ${gimpprint_libs}
dnl GIMPPRINT_DEPLIBS: libraries for linking libraries against
dnl gimpprint_cflags:  cflags to store in gimpprint-config
dnl gimpprint_libs:    libs to store in gimpprint-config
dnl LIBGIMPPRINT_LIBS  libs to link programs IN THIS PACKAGE ONLY against

dnl initial default values
GIMPPRINT_LIBS="-lgimpprint"

[GIMPPRINT_MAJOR_VERSION]=GIMPPRINT_MAJOR_VERSION
[GIMPPRINT_MINOR_VERSION]=GIMPPRINT_MINOR_VERSION
[GIMPPRINT_MICRO_VERSION]=GIMPPRINT_MICRO_VERSION
[GIMPPRINT_EXTRA_VERSION]=GIMPPRINT_EXTRA_VERSION
[GIMPPRINT_CURRENT_INTERFACE]=GIMPPRINT_CURRENT_INTERFACE
[GIMPPRINT_INTERFACE_AGE]=GIMPPRINT_INTERFACE_AGE
[GIMPPRINT_BINARY_AGE]=GIMPPRINT_BINARY_AGE
[GIMPPRINT_VERSION]=GIMPPRINT_VERSION
popdef([GIMPPRINT_MAJOR_VERSION])
popdef([GIMPPRINT_MINOR_VERSION])
popdef([GIMPPRINT_MICRO_VERSION])
popdef([GIMPPRINT_EXTRA_VERSION])
popdef([GIMPPRINT_CURRENT_INTERFACE])
popdef([GIMPPRINT_INTERFACE_AGE])
popdef([GIMPPRINT_BINARY_AGE])

AC_SUBST(GIMPPRINT_MAJOR_VERSION)
AC_SUBST(GIMPPRINT_MINOR_VERSION)
AC_SUBST(GIMPPRINT_MICRO_VERSION)
AC_SUBST(GIMPPRINT_CURRENT_INTERFACE)
AC_SUBST(GIMPPRINT_INTERFACE_AGE)
AC_SUBST(GIMPPRINT_BINARY_AGE)
AC_SUBST(GIMPPRINT_VERSION)

dnl libtool versioning
LT_RELEASE=$GIMPPRINT_MAJOR_VERSION.$GIMPPRINT_MINOR_VERSION
LT_CURRENT=$GIMPPRINT_CURRENT_INTERFACE
LT_REVISION=$GIMPPRINT_INTERFACE_AGE
LT_AGE=$GIMPPRINT_BINARY_AGE
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

dnl Initialize automake stuff.
AM_INIT_AUTOMAKE(GIMPPRINT_NAME, GIMPPRINT_VERSION)
popdef([GIMPPRINT_NAME])
popdef([GIMPPRINT_VERSION])

dnl Specify a configuration file.
AM_CONFIG_HEADER(config.h)

dnl Available languages (translations)
ALL_LINGUAS="en_GB sv no fr da pl"
AC_SUBST(ALL_LINGUAS)

dnl Set up libtool scripts.
dnl Disable static library building to speed up the build
AC_DISABLE_STATIC
AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)
dnl define HAVE_GNU_LD if GNU ld is present
if test "$ac_cv_prog_gnu_ld" = "yes" ; then
  AC_DEFINE(HAVE_GNU_LD,, [Define if GNU ld is present.])
fi

dnl Compiler options and definitions
INCLUDES="${INCLUDES} -I\$(top_srcdir)/include -I\$(top_builddir)/include -I\$(top_srcdir)/intl"

dnl Check if we are a part of the GIMP source tree, or independent
dnl and adjust defaults accordingly
AC_MSG_CHECKING([for the presence of the GIMP source tree])
if test -f ../../gimptool.1.in ; then
  AC_MSG_RESULT([yes])
  GIMP_SOURCE_TREE_SUBDIR=yes
  BUILD_LIBGIMPPRINT=no
else
  AC_MSG_RESULT([no])
  GIMP_SOURCE_TREE_SUBDIR=no
fi

AM_MAINTAINER_MODE
if test x${USE_MAINTAINER_MODE} = xyes ; then
  MAINTAINER_MODE=true
  BUILD_TEST=yes
  AC_DEFINE(HAVE_MAINTAINER_MODE,, [Define if maintainer-mode is to be used.])
fi

dnl Check canonical system/host (a kludge: replace me with something better).
if test x${host_os} = xlinux-gnu ; then
  OSTYPE="linux"
elif test "`echo ${host_os} | sed 's/^\(linux\).*$/\1/'`" = "linux" ; then
  OSTYPE="linux"
elif test "`echo ${host_os} | sed 's/^\(irix\).*$/\1/'`" = "irix" ; then
  OSTYPE="irix"
else
  OSTYPE="${host_os}"
fi
AC_DEFINE_UNQUOTED(OSTYPE, ["${OSTYPE}"], [The operating system to build for])

dnl synopsis AC_STP_ARG_WITH [(NAME, HELP, VARIABLE, DEFAULT)]
AC_DEFUN([AC_STP_ARG_WITH],
[# create custom command-line --with argument
AC_MSG_CHECKING([whether to $2])
AC_ARG_WITH($1,
            AC_HELP_STRING([--with-$1],
	                   [$2 @<:@]$4[@:>@]),
  [case "${withval}" in
    yes) [$3]="yes" ; AC_MSG_RESULT([yes]) ;;
    no) [$3]="no" ; AC_MSG_RESULT([no]) ;;
    *) AC_MSG_RESULT([unknown])
        AC_MSG_ERROR([bad value ${withval} for --with-$1]) ;;
  esac],[AC_MSG_RESULT($4)])
if test -z "${[$3]}" ; then
	  [$3]="$4"
fi
])dnl

dnl synopsis AC_STP_ARG_ENABLE [(NAME, HELP, VARIABLE, DEFAULT)]
AC_DEFUN([AC_STP_ARG_ENABLE],
[# create custom command-line --enable argument
AC_MSG_CHECKING([whether to $2])
AC_ARG_ENABLE($1,
            AC_HELP_STRING([--enable-$1],
	                   [$2 @<:@]$4[@:>@]),
  [case "${enableval}" in
    yes) [$3]="yes" ; AC_MSG_RESULT([yes]) ;;
    no) [$3]="no" ; AC_MSG_RESULT([no]) ;;
    *) AC_MSG_RESULT([unknown])
        AC_MSG_ERROR([bad value ${enableval} for --enable-$1]) ;;
  esac],[AC_MSG_RESULT($4)])
if test -z "${[$3]}" ; then
	  [$3]="$4"
fi
])dnl

dnl Command line options.
pushdef([BUILD_CUPS], [no])
AC_MSG_CHECKING([whether to build CUPS driver])
AC_ARG_WITH(cups,
            AC_HELP_STRING([--with-cups=PREFIX],
                           [build CUPS driver @<:@]BUILD_CUPS[; PREFIX=/usr@:>@]),
  [case "${withval}" in
    yes) [BUILD_CUPS]="yes" ; AC_MSG_RESULT([yes]) ; cups_prefix="/usr" ;;
    no) [BUILD_CUPS]="no" ; AC_MSG_RESULT([no]) ; cups_prefix="/usr" ;;
    *) if test -d ${withval} ; then
         [BUILD_CUPS]="yes"
	 AC_MSG_RESULT([yes (using specified prefix)])
         cups_prefix="${withval}"
       else
         AC_MSG_RESULT([unknown])
         AC_MSG_ERROR([${withval}: no such directory for --with-cups])
       fi ;;
  esac],[AC_MSG_RESULT([${BUILD_CUPS}]) ; cups_prefix="${prefix}"])

if test -z "${[BUILD_CUPS]}" ; then
  [BUILD_CUPS]="BUILD_CUPS"
fi
popdef([BUILD_CUPS])

AC_STP_ARG_WITH([translated-ppds],
                [build translated CUPS PPD files],
                [BUILD_TRANSLATED_PPDS],
                [yes])

AC_STP_ARG_ENABLE([cups-level3-ppds],
                  [generate PostScript level 3 PPD files],
                  [USE_LEVEL3_PS],
                  [no])

AC_STP_ARG_WITH([foomatic],
                [build foomatic data files],
                [BUILD_FOOMATIC],
                [no])

AC_STP_ARG_WITH([ijs],
                [build IJS driver],
                [BUILD_IJS],
                [no])

AC_MSG_CHECKING([whether to turn on debugging in build])
AC_ARG_ENABLE(debug,
[  --enable-debug          turn on debugging [default=no]],
  [case "${enableval}" in
    yes) CFLAGS="${CFLAGS:=} -g" ; AC_MSG_RESULT([yes]) ;;
    no) CFLAGS="${CFLAGS:=-O}" ; AC_MSG_RESULT([no]) ;;
    *) AC_MSG_RESULT([unknown])
       AC_MSG_ERROR([bad value ${enableval} for --enable-debug]) ;;
  esac],[CFLAGS="${CFLAGS:=-O}" ; AC_MSG_RESULT([no])])

pushdef([USE_READLINE], [yes])
pushdef([EXTRA_LIBREADLINE_DEPS], [])
AC_MSG_CHECKING([whether to use readline])
AC_ARG_WITH(readline,
[  --with-readline         turn on readline [default=]USE_READLINE[, default tries -lncurses, -lcurses, -ltermcap]],
  [case "${withval}" in
    yes) [USE_READLINE]="yes" ; AC_MSG_RESULT([yes]) ;;
    no) [USE_READLINE]="no" ; AC_MSG_RESULT([no]) ;;
    only) [USE_READLINE]="yes"
          [EXTRA_LIBREADLINE_DEPS]=" "
          AC_MSG_RESULT([yes (using only readline)]) ;;
    *) [USE_READLINE]="yes"
       [EXTRA_LIBREADLINE_DEPS]="${withval}"
       AC_MSG_RESULT([yes (using extra libraries ${withval})]) ;;
  esac],[AC_MSG_RESULT([${USE_READLINE}])])
if test -z "${[USE_READLINE]}" ; then
  [USE_READLINE]="USE_READLINE"
fi
popdef([USE_READLINE])
if test -z "${[EXTRA_LIBREADLINE_DEPS]}" ; then
  [EXTRA_LIBREADLINE_DEPS]="EXTRA_LIBREADLINE_DEPS"
fi
popdef([EXTRA_LIBREADLINE_DEPS])

AC_STP_ARG_WITH([gimp],
                [build GIMP Print plugin],
                [BUILD_GIMP],
                [yes])

AC_STP_ARG_ENABLE([samples],
                  [install sample images],
                  [INSTALL_SAMPLES],
                  [yes])

AC_STP_ARG_ENABLE([user-guide],
                  [install user guide],
                  [INSTALL_USER_GUIDE],
                  [yes])

AC_STP_ARG_ENABLE([escputil],
                  [build escputil],
                  [BUILD_ESCPUTIL],
                  [yes])

AC_STP_ARG_ENABLE([libgimpprint],
                  [build libgimpprint],
                  [BUILD_LIBGIMPPRINT],
                  [yes])

AC_STP_ARG_ENABLE([testpattern],
                  [build testpattern generator],
                  [BUILD_TESTPATTERN],
                  [no])

AC_STP_ARG_ENABLE([test],
                  [build test programs],
                  [BUILD_TEST],
                  [no])

AC_STP_ARG_ENABLE([user-install],
                  [install GIMP plugin in home directory],
                  [USER_INSTALL],
                  [no])
if test x$USER_INSTALL = xyes ; then
  PLUG_IN_PATH="bin"
else
  PLUG_IN_PATH="admin-bin"
fi

dnl Honour aclocal flags.
dnl AM_ACLOCAL_INCLUDE(m4local)
ACLOCAL_FLAGS='-I src/main'
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

dnl Checks for programs.
AC_ISC_POSIX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LEX
AC_PROG_YACC
AC_PATH_PROG(PERL, perl)
AC_PATH_PROG(CONVERT, convert)
if test x${CONVERT} = x ; then
  AC_MSG_WARN([PostScript user's guide cannot be regenerated!])
fi
AC_PATH_PROG(TEXI2HTML, texi2html)
if test x${TEXI2HTML} = x ; then
  AC_MSG_WARN([HTML documentation cannot be regenerated!])
fi
AC_PATH_PROG(DVIPS, dvips)
if test x${DVIPS} = x ; then
  AC_MSG_WARN([PostScript documentation cannot be regenerated!])
fi
AC_PATH_PROG(DB2PDF, db2pdf)
if test x${DB2PDF} = x ; then
  AC_MSG_WARN([PDF user's guide cannot be regenerated!])
fi
AC_PATH_PROGS(DVIPDF, dvipdf dvipdfm)
if test x${DVIPDF} = x ; then
  AC_MSG_WARN([PDF documentation cannot be regenerated!])
fi
AC_PATH_PROG(DB2PS, db2ps)
if test x${DB2PS} = x ; then
  AC_MSG_WARN([PostScript user's guide cannot be regenerated!])
fi
AC_PATH_PROG(DB2HTML, db2html)
if test x${DB2PS} = x ; then
  AC_MSG_WARN([HTML user's guide cannot be regenerated!])
fi
dnl foomatic checks
if test x${BUILD_FOOMATIC} = xyes ; then
  AC_CHECK_PROG(FOOMATIC_KITLOAD, foomatic-kitload, foomatic-kitload)
  if test -z "$FOOMATIC_KITLOAD" ; then
    AC_MSG_WARN(Cannot find foomatic-kitload; attempt to install foomatic will fail)
  fi
fi

dnl ijs checks
if test x${BUILD_IJS} = xyes ; then
  AC_CHECK_HEADERS(ijs_server.h, HAVE_IJS_H=true, HAVE_IJS_H=false)
  if test x${HAVE_IJS_H} = xfalse ; then
    AC_MSG_WARN(Cannot find ijs_server.h; attempt to build IJS driver will fail)
  fi
fi

dnl GNU gettext checks.
AH_TEMPLATE(ENABLE_NLS, [AM_GNU_GETTEXT should provide this])
AH_TEMPLATE(HAVE_CATGETS, [AM_GNU_GETTEXT should provide this])
AH_TEMPLATE(HAVE_GETTEXT, [AM_GNU_GETTEXT should provide this])
AH_TEMPLATE(HAVE_LC_MESSAGES, [AM_GNU_GETTEXT should provide this])
AM_GNU_GETTEXT

dnl Set PACKAGE_LOCALE_DIR in config.h
AH_TEMPLATE(PACKAGE_LOCALE_DIR, [Package locale directory])
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, ["${ac_default_prefix}/${DATADIRNAME}/locale"])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, ["${prefix}/${DATADIRNAME}/locale"])
fi

dnl Compiler flags
if test "$CC" = "gcc" ; then
  GNUCFLAGS="-Wall -Wcast-align -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wwrite-strings -pedantic"
fi
AC_SUBST(GNUCFLAGS)

dnl Checks for libraries.
dnl When checking readline, check using extra libraries first.
dnl We want to protect against the link somehow succeeding, but only
dnl failing at runtime, as seems to happen on some BSD systems.
if test "$USE_READLINE" = yes ; then
  if test "$EXTRA_LIBREADLINE_DEPS" = "" ; then
    unset ac_cv_lib_readline_readline
    AC_CHECK_LIB(readline, readline, HAVE_LIBREADLINE=true,
		 HAVE_LIBREADLINE=false, -lncurses)
    if test x${HAVE_LIBREADLINE} = xtrue ; then
      echo "  Using -lreadline -lncurses"
      EXTRA_LIBREADLINE_DEPS=-lncurses
      AC_DEFINE(HAVE_LIBREADLINE, [1])
    else
      unset ac_cv_lib_readline_readline
      AC_CHECK_LIB(readline, readline, HAVE_LIBREADLINE=true,
		   HAVE_LIBREADLINE=false, -lcurses)
      if test x${HAVE_LIBREADLINE} = xtrue ; then
	echo "  Using -lreadline -lcurses"
	EXTRA_LIBREADLINE_DEPS=-lcurses
	AC_DEFINE(HAVE_LIBREADLINE, [1])
      else
	unset ac_cv_lib_readline_readline
	AC_CHECK_LIB(readline, readline, HAVE_LIBREADLINE=true,
		     HAVE_LIBREADLINE=false, -lcurses)
	if test x${HAVE_LIBREADLINE} = xtrue ; then
	  echo "  Using -lreadline -ltermcap"
	  EXTRA_LIBREADLINE_DEPS=-ltermcap
	  AC_DEFINE(HAVE_LIBREADLINE, [1])
	else
	  unset ac_cv_lib_readline_readline
	  AC_CHECK_LIB(readline, readline, HAVE_LIBREADLINE=true,
		       HAVE_LIBREADLINE=false)
	  if test x${HAVE_LIBREADLINE} = xtrue ; then
	    AC_DEFINE(HAVE_LIBREADLINE, [1])
	  else
	    AC_DEFINE(HAVE_LIBREADLINE, [0])
	  fi
	fi
      fi
    fi
  else
    unset ac_cv_lib_readline_readline
    AC_CHECK_LIB(readline, readline, HAVE_LIBREADLINE=true,
		 HAVE_LIBREADLINE=false, ${EXTRA_LIBREADLINE_DEPS})
    if test x${HAVE_LIBREADLINE} = xtrue ; then
      echo "  Using -lreadline ${EXTRA_LIBREADLINE_DEPS}"
      AC_DEFINE(HAVE_LIBREADLINE, [1])
    else
      AC_DEFINE(HAVE_LIBREADLINE, [0])
    fi
  fi
else
  HAVE_LIBREADLINE=false
  AC_DEFINE(HAVE_LIBREADLINE, [0])
fi

dnl check for libm, and also add to CUPS LIBS
AC_CHECK_LIB(m,pow,
  GIMPPRINT_DEPLIBS="${GIMPPRINT_DEPLIBS} -lm"
  CUPS_LIBS="${CUPS_LIBS} -lm")
dnl CUPS library checks
if test x${BUILD_CUPS} = xyes ; then
  AC_CHECK_LIB(z,gzgets,
    HAVE_LIBZ=true, HAVE_LIBZ=false)
  if test x${HAVE_LIBZ} = xtrue ; then
    CUPS_LIBS="${CUPS_LIBS} -lz"
    LIBS="$LIBS -lz"
    AC_DEFINE(HAVE_LIBZ,, [Define if libz is present.])
  fi
  AC_PATH_PROG(CUPS_CONFIG,cups-config)
  if test "x$CUPS_CONFIG" != x; then
    dnl Use values from CUPS config...
    CUPS_LIBS="`$CUPS_CONFIG --ldflags` `$CUPS_CONFIG --image --libs`"
    CUPS_CFLAGS="`$CUPS_CONFIG --cflags`"
  else
    dnl Save current library list...
    SAVELIBS="$LIBS"
    LIBS="$LIBS ${CUPS_LIBS}"
    AC_CHECK_LIB(socket,socket,
      if test x${OSTYPE} != xirix ; then
      CUPS_LIBS="${CUPS_LIBS} -lsocket"
      LIBS="$LIBS -lsocket"
    fi)
    AC_CHECK_LIB(nsl,gethostbyaddr,
      if test x${OSTYPE} != xirix ; then
      CUPS_LIBS="${CUPS_LIBS} -lnsl"
      LIBS="$LIBS -lnsl"
    fi)

    dnl Some OS's need to link against crypto stuff too if CUPS is compiled
    dnl with crypto support... :(
    AC_CHECK_HEADER(openssl/ssl.h,
      dnl Some ELF systems can't resolve all the symbols in libcrypto
      dnl if libcrypto was linked against RSAREF, and fail to link the
      dnl test program correctly, even though a correct installation
      dnl of OpenSSL exists.  So we test the linking three times in
      dnl case the RSAREF libraries are needed.

      SSL="no"

      for libcrypto in \
	  "-lcrypto" \
	  "-lcrypto -lrsaref" \
	  "-lcrypto -lRSAglue -lrsaref"
      do
	  AC_CHECK_LIB(ssl,SSL_new,
	      [CUPS_LIBS="${CUPS_LIBS} -lssl $libcrypto"
	       SSL="yes"],,
	      $libcrypto)

	  if test x$SSL = xyes; then
	      break
	  fi
      done)

    dnl Require CUPS 1.1...
    AC_CHECK_LIB(cups,cupsPrintFiles,
      CUPS_LIBS="${CUPS_LIBS} -lcups",
      LIBS="$LIBS -lcups"
      AC_MSG_ERROR([Cannot find CUPS libraries (libcups)]))
    AC_CHECK_LIB(cupsimage,cupsRasterOpen,
      CUPS_LIBS="${CUPS_LIBS} -lcupsimage",
      AC_MSG_ERROR([Cannot find CUPS libraries (libcupsimage)]),
      -lcups)
    dnl Restore old library list...
    LIBS="$SAVELIBS"

    dnl Add CUPS include directory as needed...
    if test "x${cups_prefix}" != "x/usr" -a "x${cups_prefix}" != x; then
      CUPS_CFLAGS="-I${cups_prefix}/include"
    else
      CUPS_CFLAGS=""
    fi
  fi
fi

dnl GIMP library checks
if test x${BUILD_GIMP} = xyes -o -n "${BUILD_PACKAGE}" ; then
  if test x$GIMP_SOURCE_TREE_SUBDIR = xyes ; then
    AM_PATH_GTK
    AM_PATH_GLIB
    GIMP_CFLAGS="-I\$(top_srcdir)/../.. \$(GTK_CFLAGS) \$(GLIB_CFLAGS)"
    GIMP_LIBS="\$(GTK_LIBS) \$(GLIB_LIBS) \$(top_builddir)/../../libgimp/libgimp.la  \$(top_builddir)/../../libgimp/libgimpui.la"
  else
    AM_PATH_GIMP(1.2.0,
                 [SAVE_GTK_LIBS="$GIMP_LIBS"
                  SAVE_GTK_CFLAGS="$GIMP_CFLAGS"],
                  AC_MSG_ERROR(Cannot find GIMP libraries: Please run ldconfig as root and make sure gimptool is on your PATH.))
  fi
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADER(readline/readline.h,
  HAVE_READLINE_READLINE_H=true,
  HAVE_READLINE_READLINE_H=false)
if test x${HAVE_READLINE_READLINE_H} = xtrue ; then
  AC_DEFINE(HAVE_READLINE_READLINE_H,, [Define if libreadline header is present.])
  if test x${HAVE_LIBREADLINE} = xtrue ; then
    LIBREADLINE_DEPS="-lreadline $EXTRA_LIBREADLINE_DEPS"
  fi
fi

AC_CHECK_HEADERS(varargs.h)
AC_CHECK_HEADERS(stdarg.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL

dnl Checks for library functions.
AC_FUNC_ALLOCA
dnl [commented out while I find a memcmp.c for lib/] AC_FUNC_MEMCMP
dnl GNU libc memcmp.c is too glibc-dependent to include.
AC_CHECK_FUNCS(poll)
dnl The following is used to build a "utility library" in lib/
AC_REPLACE_FUNCS(xgetcwd xmalloc)
AC_CHECK_FUNC(asprintf,
  AC_DEFINE(HAVE_ASPRINTF,, [Define if you have the `asprintf' function.]),
  LIBOBJS="${LIBOBJS} vasprintf.o")
AC_CHECK_FUNC(vasprintf,
  AC_DEFINE(HAVE_VASPRINTF,, [Define if you have the `vasprintf' function.]),
  LIBOBJS="${LIBOBJS} vasprintf.o")
AC_SUBST(PRINT_VASPRINTF)
AC_CHECK_FUNC(getopt_long,
  AC_DEFINE(HAVE_GETOPT_LONG,, [Define if you have the `getopt_long' function.]),
  LIBOBJS="${LIBOBJS} getopt.o getopt1.o")

dnl Define what has to be built
if test x${BUILD_FOOMATIC} = xyes ; then
  FOOMATIC_NOINST_BIN='$(FOOMATIC_NOINST_BIN)'
fi
AM_CONDITIONAL(BUILD_FOOMATIC, test x${BUILD_FOOMATIC} = xyes)

if test x${BUILD_IJS} = xyes ; then
  IJS_BIN='$(IJS_BIN)'
fi
AM_CONDITIONAL(BUILD_IJS, test x${BUILD_IJS} = xyes)

if test x${BUILD_CUPS} = xyes ; then
  CUPS_BIN='$(CUPS_BIN)'
  CUPS_BACKEND_BIN='$(CUPS_BACKEND_BIN)'
  CUPS_FILTER_BIN='$(CUPS_FILTER_BIN)'
  CUPS_NOINST_BIN='$(CUPS_NOINST_BIN)'
  CUPS_MAN='$(CUPS_MAN)'
  CUPS_PKG='$(CUPS_PKG)'
  CUPS_CONF='$(CUPS_CONF)'
fi
AM_CONDITIONAL(BUILD_CUPS, test x${BUILD_CUPS} = xyes)

AM_CONDITIONAL(BUILD_TRANSLATED_PPDS, test x${BUILD_TRANSLATED_PPDS} = xyes)

if test x${USE_LEVEL3_PS} = xyes ; then
  CUPS_PPD_PS_LEVEL=3
else
  CUPS_PPD_PS_LEVEL=2
fi

AM_CONDITIONAL(USE_LEVEL3_PS, test x${USE_LEVEL3_PS} = xyes)

if test x${BUILD_ESCPUTIL} = xyes ; then
  ESCPUTIL_BIN='$(ESCPUTIL_BIN)'
  ESCPUTIL_MAN='$(ESCPUTIL_MAN)'
fi
AM_CONDITIONAL(BUILD_ESCPUTIL, test x${BUILD_ESCPUTIL} = xyes)

if test x${BUILD_TEST} = xyes ; then
  TEST_BIN='$(TEST_BIN)'
fi
AM_CONDITIONAL(BUILD_TEST, test x${BUILD_TEST} = xyes)

if test x${BUILD_TESTPATTERN} = xyes ; then
  TESTPATTERN_BIN='$(TESTPATTERN_BIN)'
fi
AM_CONDITIONAL(BUILD_TESTPATTERN, test x${BUILD_TESTPATTERN} = xyes)

if test x${BUILD_GIMP} = xyes ; then
  GIMP_BIN='$(GIMP_BIN)'
fi
AM_CONDITIONAL(BUILD_GIMP, test x${BUILD_GIMP} = xyes)

if test x${BUILD_LIBGIMPPRINT} = xyes ; then
  MAIN_BIN='$(MAIN_BIN)'
  MAIN_DAT='$(MAIN_DAT)'
  MAIN_MAN='$(MAIN_MAN)'
  MAIN_SCR='$(MAIN_SCR)'
  LIBGIMPPRINT_LIBS="\$(top_builddir)/src/main/libgimpprint.la"
  GIMP_PRINT_H="gimp-print.h"
  INCLUDE_GIMP_PRINT_H="\"gimp-print/gimp-print.h\""
else
  AM_PATH_GIMPPRINT(
    $GIMPPRINT_VERSION,
    [LIBGIMPPRINT_CFLAGS="${GIMPPRINT_CFLAGS}"
      LIBGIMPPRINT_LIBS="${GIMPPRINT_LIBS}"
      INCLUDE_GIMP_PRINT_H="<gimp-print/gimp-print.h>"],
    [AC_MSG_WARN([Cannot find current GIMP-PRINT library: building included libgimpprint])
      MAIN_BIN='$(MAIN_BIN)'
      MAIN_DAT='$(MAIN_DAT)'
      MAIN_MAN='$(MAIN_MAN)'
      MAIN_SCR='$(MAIN_SCR)'
      LIBGIMPPRINT_LIBS="\$(top_builddir)/src/main/libgimpprint.la"
      GIMP_PRINT_H="gimp-print/gimp-print.h"
      INCLUDE_GIMP_PRINT_H="\"gimp-print/gimp-print.h\""]
  )
fi
AM_CONDITIONAL(BUILD_LIBGIMPPRINT, test x${BUILD_LIBGIMPPRINT} = xyes)

if test x${INSTALL_SAMPLES} = xyes ; then
  SAMPLE_IMAGES='$(SAMPLE_IMAGES)'
fi
AM_CONDITIONAL(INSTALL_SAMPLES, test x${INSTALL_SAMPLES} = xyes)

if test x${INSTALL_USER_GUIDE} = xyes ; then
  USER_GUIDE='$(USER_GUIDE)'
fi
AM_CONDITIONAL(INSTALL_USER_GUIDE, test x${INSTALL_USER_GUIDE} = xyes)


dnl CUPS path setup
dnl Fix "prefix" variable if it hasn't been specified...
if test x${cups_prefix} = xNONE ; then
  cups_prefix="/usr"
fi
dnl Fix "exec_prefix" variable if it hasn't been specified...
if test x${exec_prefix} = xNONE ; then
  if test "${cups_prefix}" = "/" ; then
    cups_exec_prefix="/usr"
  else
    cups_exec_prefix="${cups_prefix}"
  fi
fi
dnl Fix "bindir" variable if it hasn't been specified...
if test "${bindir}" = "\${prefix}/bin" -a "${cups_prefix}" = "/" ; then
  cups_bindir="/usr/bin"
else
  cups_bindir="${cups_prefix}/bin"
fi

dnl Get explicit CUPS directories if possible
if test "x$CUPS_CONFIG" != x; then
  cups_conf_datadir="`$CUPS_CONFIG --datadir`"
  cups_conf_serverbin="`$CUPS_CONFIG --serverbin`"
  cups_conf_serverroot="`$CUPS_CONFIG --serverroot`"
else
dnl Some logical guessing
  if test "${datadir}" = "\${prefix}/share" -a "${cups_prefix}" = "/" ; then
    cups_conf_datadir="/usr/share/cups"
  else
    cups_conf_datadir="${cups_prefix}/share/cups"
  fi
  if test "${libdir}" = "\${prefix}/lib" -a "${cups_prefix}" = "/" ; then
    cups_conf_serverbin="/usr/lib/cups"
  else
    cups_conf_serverbin="${cups_prefix}/lib/cups"
  fi
  if test "${sysconfdir}" = "\${prefix}/etc"; then
    if test "${cups_prefix}" = "/usr" ; then
      cups_conf_serverroot="/etc/cups"
    else
      cups_conf_serverroot="${cups_prefix}/etc/cups"
    fi
  fi
fi

AM_CONDITIONAL(USE_NLS, test x${USE_NLS} = xyes)


dnl Define LTLIBOBJS
LTLIBOBJS=`echo "$LIBOBJS" | sed 's/\.o/.lo/g'`
LTALLOCA=`echo "$ALLOCA" | sed 's/\.o/.lo/g'`

dnl Definitions
AC_DEFINE_UNQUOTED(CUPS_DATADIR, "${cups_exec_prefix}/share/cups", [CUPS data directory.])
AC_DEFINE_UNQUOTED(CUPS_PPD_PS_LEVEL, ${CUPS_PPD_PS_LEVEL}, [CUPS PPD PostScript level])
AC_DEFINE_UNQUOTED(INCLUDE_GIMP_PRINT_H, ${INCLUDE_GIMP_PRINT_H}, [GIMP-Print header to include.])
XXXRELEASE_DATE=XXX
AC_DEFINE_UNQUOTED(RELEASE_DATE, "${RELEASE_DATE}", [Package release date.])

dnl Some versions of make get very grouchy about $(RM)
RM='rm'

dnl Substitutions
AC_SUBST(cups_prefix)
AC_SUBST(cups_exec_prefix)
AC_SUBST(cups_bindir)
AC_SUBST(cups_conf_datadir)
AC_SUBST(cups_conf_serverbin)
AC_SUBST(cups_conf_serverroot)
AC_SUBST(CUPS_BIN)
AC_SUBST(CUPS_BACKEND_BIN)
AC_SUBST(CUPS_FILTER_BIN)
AC_SUBST(CUPS_PKG)
AC_SUBST(CUPS_CONF)
AC_SUBST(CUPS_INSTALL)
AC_SUBST(CUPS_CFLAGS)
AC_SUBST(CUPS_LIBS)
AC_SUBST(CUPS_MAN)
AC_SUBST(CUPS_PPD_PS_LEVEL)
AC_SUBST(CUPS_NOINST_BIN)
AC_SUBST(FOOMATIC_NOINST_BIN)
AC_SUBST(FOOMATIC_INSTALL)
AC_SUBST(IJS_BIN)
AC_SUBST(IJS_INSTALL)
AC_SUBST(TEST_BIN)
AC_SUBST(TESTPATTERN_BIN)
AC_SUBST(RM)
AC_SUBST(ESCPUTIL_BIN)
AC_SUBST(ESCPUTIL_MAN)
AC_SUBST(GIMP_BIN)
AC_SUBST(GIMP_CFLAGS)
AC_SUBST(GIMP_LIBS)
AC_SUBST(GIMP_PRINT_H)
AC_SUBST(GIMPPRINT_CFLAGS)
AC_SUBST(GIMPPRINT_LIBS)
AC_SUBST(GIMPPRINT_DEPLIBS)
AC_SUBST(GIMPPRINT_VERSION)
AC_SUBST(gimpprint_cflags)
gimpprint_libs="${GIMPPRINT_LIBS} ${GIMPPRINT_DEPLIBS}"
AC_SUBST(gimpprint_libs)
AC_SUBST(INCLUDES)
LIBGIMPPRINT_LIBS="${LIBGIMPPRINT_LIBS} ${GIMPPRINT_DEPLIBS}"
AC_SUBST(LIBGIMPPRINT_LIBS)
AC_SUBST(LIBREADLINE_DEPS)
AC_SUBST(LTLIBOBJS)
AC_SUBST(LTALLOCA)
AC_SUBST(MAIN_BIN)
AC_SUBST(MAIN_DAT)
AC_SUBST(MAIN_MAN)
AC_SUBST(MAIN_SCR)
AC_SUBST(MAINTAINER_CFLAGS)
AC_SUBST(PLUG_IN_PATH)
AC_SUBST(RELEASE_DATE)
AC_SUBST(SAMPLE_IMAGES)
AC_SUBST(USER_GUIDE)

dnl Output files
dnl po/Makefile.in *MUST* be surrounded by spaces to work with buggy
dnl gettext 0.10.36.  Do not move this file to the beginning or end
dnl of a line.

AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([doc/Makefile doc/developer/Makefile doc/users_guide/Makefile])
AC_CONFIG_FILES([include/Makefile include/gimp-print/Makefile include/gimp-print/gimp-print.h])
AC_CONFIG_FILES([intl/Makefile])
AC_CONFIG_FILES([lib/Makefile])
AC_CONFIG_FILES([man/Makefile man/escputil.1])
AC_CONFIG_FILES([man/cups-calibrate.8])
AC_CONFIG_FILES([man/gimpprint.3 man/gimpprint-config.1])
AC_CONFIG_FILES([po/Makefile.in])
AC_CONFIG_FILES([samples/Makefile])
AC_CONFIG_FILES([src/Makefile])
AC_CONFIG_FILES([src/cups/Makefile src/escputil/Makefile src/foomatic/Makefile])
AC_CONFIG_FILES([src/foomatic/foomatic-generator], [chmod +x src/foomatic/foomatic-generator])
AC_CONFIG_FILES([src/ghost/Makefile src/ghost/contrib.mak.addon src/ijs/Makefile src/testpattern/Makefile])
AC_CONFIG_FILES([src/gimp/Makefile])
AC_CONFIG_FILES([src/main/Makefile])
AC_CONFIG_FILES([src/main/gimpprint-config], [chmod +x src/main/gimpprint-config])
AC_CONFIG_FILES([src/main/gimp-print.pc])
AC_CONFIG_FILES([src/printdef/Makefile])

AC_CONFIG_FILES([cups-gimpprint.list])
AC_CONFIG_FILES([test/Makefile])
AC_CONFIG_COMMANDS([ghost],[
if test -f src/ghost/contrib.mak.addon ; then
  sed -e 's;${exec_prefix};'"${exec_prefix};" -e 's;${prefix};'"${prefix};" src/ghost/contrib.mak.addon > src/ghost/contrib.mak.addon.tmp
  mv src/ghost/contrib.mak.addon.tmp src/ghost/contrib.mak.addon
fi
])
AC_CONFIG_COMMANDS([default], [
echo "Finished configuring."
echo "Type 'make' to build the package"
echo "then 'make install' to install it."
])

AC_OUTPUT
